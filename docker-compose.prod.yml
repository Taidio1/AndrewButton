version: '3.8'

services:
  audio-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: audio-button-grid-prod
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MAX_FILE_SIZE=100MB
    volumes:
      # Persystentny storage dla plikÃ³w audio
      - audio_sounds_prod:/app/public/sounds
      # Logi aplikacji
      - ./logs:/app/logs
    networks:
      - audio-network-prod
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx reverse proxy dla produkcji
  nginx:
    image: nginx:alpine
    container_name: audio-app-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - audio-app
    networks:
      - audio-network-prod
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  audio_sounds_prod:
    driver: local
  nginx_logs:
    driver: local

networks:
  audio-network-prod:
    driver: bridge
